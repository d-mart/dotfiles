# -*- mode: shell-script -*- # TODO: make this the bash variant of this mode

readonly __aliases_path="${SHELL_HOME}/alias"
readonly __shell_alias_file="${__aliases_path}/aliases.$(shell_name)"
readonly __local_alias_file="${__aliases_path}/aliases.local"
readonly __os_alias_file="${__aliases_path}/aliases.$(get_os)"

# enable color support of ls and also add handy aliases
# @todo make this dependent on linux
if [ -x /usr/bin/dircolors ]; then
  eval "`dircolors -b`"
  alias ls='ls --color=auto -h'
  alias dir='dir --color=auto'
  alias vdir='vdir --color=auto'
fi

alias cd..='cd ..'  # get rid of command not found
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias .....='cd ../../../..'
alias .4='cd ../../../..'
alias .5='cd ../../../../..'

alias ducks='du -cks * | sort -rn | head -11'

alias myip="dig +short myip.opendns.com @resolver1.opendns.com"
alias iip="ip a | grep 'inet ' | sed -e 's/^.*inet //g' -e 's/\/.*//g' | grep -v '127.0.0.1'"

alias lf="ls -l | egrep -v '^d'"   # list non-directories
alias ldir="ls -l | egrep '^d'"    # list directories
alias lsd='ls -ld */ .*/'          # list directories

alias grep='grep --extended-regexp --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'

# remove ansi codes from a stream, e.g. ls -l --color | strip_ansi
# NB: gsed is brew install gnu-sed on mac
SED=sed
if [ $(get_os) = "mac" ]; then
  SED=gsed
fi
alias strip_ansi="$SED -r 's/\x1B\[([0-9]{1,2}(;[0-9]{1,2})?)?[m|K]//g'"

# collapse whitespace to comma or single space (for reference)
alias compact2c="sed -E 's/[[:space:]]+/,/g'"
alias compact="sed -E 's/[[:space:]]+/ /g'"

# openssl
alias x5='openssl x509 -noout -text -in'  # x5 foo.crt -> view certificate

# date / time formats
alias today="date +%Y-%m-%d"
alias time="date +%H-%M-%S"
alias timestamp="date +%Y%m%d-%H%M%S"

# override in aliases.local if necessary (osx)
export EMACS="emacs"
export EMACSCLIENT="emacsclient"

alias mcom='minicom --noinit --baudrate=115200 --device'
alias mcom4='minicom --noinit --baudrate=4800 --device'
alias adb='/usr/local/android-sdk-linux_86/platform-tools/adb'
alias ff='find . -name'

# find newest files in or below current dir (need 'gstat' on OSX)
alias newest="find . -type f -exec stat --format '%Y :%y %n' {} \; | sort -nr | cut -d: -f2- | head"

# CLI tools aliases
alias pg="ps aux | grep -v grep | grep"
alias myip="ifconfig | grep \"inet addr\" | awk -F\: '{ print \$2 }' | awk '{ print \$1 }' "
alias mem="free -m"
# use my local (home dir) mlocate database (local-locate)
alias lloc="locate --database ~/.mlocate/mlocate.db"
alias llocb="locate --database ~/.mlocate/mlocate.db --basename"

## Record of longish useful shell commands for reference
# find zero-length files older than 90 days and delete
alias rm_old_empty="find . -type f -size 0 -mtime +90 | xargs rm"

# apt aliases
alias install='sudo apt-get -y install'
alias search='apt-cache search'
alias purge='sudo apt-get purge'
alias pkginfo='apt-cache show'      # show description of package
alias whichpkg='apt-file search'    # needs apt-file update to be run to update db

# workflow shortcuts
alias tag="find . -name \*.[ch] -print | etags --filter=yes > TAGS"
alias rtag="find . -name \*.rb -print | etags --filter=yes > TAGS"

## sshfs usage: sshfs [user@]host:[dir] mountpoint [options]
## sshfs -oreconnect -p 2223 Administrator@localhost:/cygdrive/c ~/sshfs
# sshfs mount aliases removed (public github)
function ssh_umount()
{
    local __ssh_mounts=`mount | grep \`whoami\` | grep fuse.sshfs | awk '{ print $3 }'`;
    for __mount in $__ssh_mounts;
    do
        echo "Unmounting $__mount";
        fusermount -u -z $__mount;
    done
}

# print the definition of a bash function, e.g. dumpfunc ftc
alias dumpfunc="declare -f"

# a script wrapper to 'bc' command line calculator
# note: collides with /usr/bin/cal - display calendar
alias cal="${HOME}/bin/solve.sh"

pause() { read -p "Press Enter to continue..." ; }

# one-liner lookup on wikiepedia, e.g. 'wp ostrich'
wp() { dig +short txt $1.wp.dg.cx ; }
# reverse dns lookup
alias rdig='dig +short -x'
# serve current directory via http
alias server="ruby -run -ehttpd . -p 8080"

# Grep shortcuts
# -r recurse directories
# -I ignore binary files
# -H print filename
# -n print line number
ftc()  { egrep -rIHn --include="*\.c" --exclude="TAGS" "$@" * ; }
fth()  { egrep -rIHn --include="*\.h" --exclude="TAGS" "$@" * ; }
ftch() { egrep -rIHn --include="*\.[ch]" --exclude="TAGS" "$@" * ; }
ftr()  { egrep -rIHn --include="*\.rb" --include="\*.feature" --exclude="TAGS" "$@" * ; }
ft()   { egrep -Rn "$@" * ; }

# open path/to/file.ext:123 at the line 123
function ec_with_line_number() {
  if [[ $1 =~ (.*):([0-9]+)$ ]]; then
    $EMACSCLIENT -n "+${BASH_REMATCH[2]}" "${BASH_REMATCH[1]}"
  else
    $EMACSCLIENT -n "$@"
  fi
}

alias ec="ec_with_line_number"
alias e="ec_with_line_number"
alias et="$EMACSCLIENT -t"
alias ecl="$EMACSCLIENT -n -a ''"
alias eclw="$EMACSCLIENT -n -c -a ''"
alias eq='$EMACS -q -nw --eval="(setq make-backup-files nil)"'

alias preview="fzf --preview 'bat --color \"always\" {}'"
export FZF_DEFAULT_OPTS="--bind='ctrl-o:execute(en {})+abort'"

# launch emacsclient, or failing that, emacs
export EDITOR="$EMACSCLIENT"
export VISUAL="$EMACSCLIENT -a ''"
export ALTERNATE_EDITOR="$EMACS"

# use emacs for quick su editing (via emacs-fu)
alias sue="SUDO_EDITOR=\"$EMACSCLIENT -c -a emacs\" sudoedit"
function E() {
  "$EMACSCLIENT" -c -a "$EMACS" "sudo:root@localhost:$1"
}

function pgc() {
  PGPASSWORD="$DB_PASS" psql --username "$DB_USER" --host "$DB_HOST" --port="$DB_PORT" "$DB_NAME"
}

if ! command -v wget > /dev/null; then
  alias wget='echo "(using curl)"; curl -O'
fi

# See if there is a local bash_aliases and source it
source_if_exists "${__os_alias_file}" "${__shell_alias_file}" "${__local_alias_file}"
