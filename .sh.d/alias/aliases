# enable color support of ls and also add handy aliases
# @todo make this dependent on linux
if [ -x /usr/bin/dircolors ]; then
    eval "`dircolors -b`"
    alias ls='ls --color=auto -h'
    alias dir='dir --color=auto'
    alias vdir='vdir --color=auto'
fi

alias cd..='cd ..'  # get rid of command not found
alias ..='cd ..'
alias ...='cd ../../../'
alias ....='cd ../../../../'
alias .....='cd ../../../../'
alias .4='cd ../../../../'
alias .5='cd ../../../../..'

alias lf="ls -l | egrep -v '^d'"   # list non-directories
alias ldir="ls -l | egrep '^d'"    # list directories
alias lsd='ls -ld */ .*/'          # list directories

alias grep='grep --extended-regexp --color=auto --line-number --with-filename'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'

# Wine
alias win="env WINEPREFIX=\"~/.wine\" wine"

# Me likey color!
which colorgcc &> /dev/null  && alias gcc=colorgcc
which colordiff &> /dev/null && alias diff=colordiff
alias ccat=/usr/share/source-highlight/src-hilite-lesspipe.sh

# vagrant
__vagrant="vagrant"
alias v="${__vagrant}"
alias vp="${__vagrant} provision"
alias vnp="${__vagrant} up --no-provision"

# knife
alias kci="knife cookbook github install"

# berksfile
alias bu="berks upload --ssl-verify=false --no-freeze"

# launching aliases
alias g='gedit 2>/dev/null'
# emacsclient args
# -n   don't wait for client
# -c   run a new graphical emacs client (frame)
# -t   run a console emacs client
# -a   specify alternate editor
if on_mac; then
    export EMACS="/Applications/Emacs-2014.01.31.app/Contents/MacOS/Emacs"
    export EMACSCLIENT="/Applications/Emacs-2014.01.31.app/Contents/MacOS/bin/emacsclient"
else
    export EMACS="emacs"
    export EMACSCLIENT="emacsclient"
fi

alias ec="$EMACSCLIENT"
alias ecl="$EMACSCLIENT -n -a ''"
alias eclw="$EMACSCLIENT -n -c -a ''"
alias eq='$EMACS -q -nw --eval="(setq make-backup-files nil)"'

# launch emacsclient, or failing that, emacs
export EDITOR="$EMACSCLIENT"
export VISUAL="$EMACSCLIENT -a ''"
export ALTERNATE_EDITOR="$EMACS"

alias mcom='minicom --noinit --baudrate=115200 --device'
alias mcom4='minicom --noinit --baudrate=4800 --device'
alias ta='textadept'
alias tea='~/app/tea-31.0.0/bin/tea'
alias sub=sublime-text-2
alias ejd='sudo ejabberdctl'
alias adb='/usr/local/android-sdk-linux_86/platform-tools/adb'
alias ff='find . -name'
alias ffx='firefox -no-remote -p quick'      # open 'quick' profile of firefox
# @todo make more smarterer
alias ffx='/Applications/Firefox.app/Contents/MacOS/firefox-bin -no-remote -P'

# use emacs for quick su editing (via emacs-fu)
alias sue="SUDO_EDITOR=\"$EMACSCLIENT -c -a emacs\" sudoedit"
function E()
{
    "$EMACSCLIENT" -c -a "$EMACS" "sudo:root@localhost:$1"
}

# CLI tools aliases
alias pg="ps aux | grep -v grep | grep"
alias myip="ifconfig | grep \"inet addr\" | awk -F\: '{ print \$2 }' | awk '{ print \$1 }' "
alias mem="free -m"
# use my local (home dir) mlocate database (local-locate)
alias lloc="locate --database ~/.mlocate/mlocate.db"
alias llocb="locate --database ~/.mlocate/mlocate.db --basename"

## Record of longish useful shell commands for reference
# find zero-length files older than 90 days and delete
alias rm_old_empty="find . -type f -size 0 -mtime +90 | xargs rm"

# apt aliases
alias install='sudo apt-get -y install'
alias search='apt-cache search'
alias purge='sudo apt-get purge'
alias pkginfo='apt-cache show'      # show description of package
alias whichpkg='apt-file search'    # needs apt-file update to be run to update db

# workflow shortcuts
alias tag="find . -name \*.[ch] -print | etags --filter=yes > TAGS"
alias rtag="find . -name \*.rb -print | etags --filter=yes > TAGS"

## sshfs usage: sshfs [user@]host:[dir] mountpoint [options]
## sshfs -oreconnect -p 2223 Administrator@localhost:/cygdrive/c ~/sshfs
# sshfs mount aliases removed (public github)
function ssh_umount()
{
    local __ssh_mounts=`mount | grep \`whoami\` | grep fuse.sshfs | awk '{ print $3 }'`;
    for __mount in $__ssh_mounts;
    do
        echo "Unmounting $__mount";
        fusermount -u -z $__mount;
    done
}

# print the definition of a bash function, e.g. dumpfunc ftc
alias dumpfunc="declare -f"

# a script wrapper to 'bc' command line calculator
# note: collides with /usr/bin/cal - display calendar
alias cal="solve.sh"

pause() { read -p "Press Enter to continue..." ; }

# one-liner lookup on wikiepedia, e.g. 'wp ostrich'
wp() { dig +short txt $1.wp.dg.cx ; }
# reverse dns lookup
alias rdig='dig +short -x'

# Grep shortcuts
# -r recurse directories
# -I ignore binary files
# -H print filename
# -n print line number
ftc()  { egrep -rIHn --include="*\.c" --exclude="TAGS" "$@" * ; }
fth()  { egrep -rIHn --include="*\.h" --exclude="TAGS" "$@" * ; }
ftch() { egrep -rIHn --include="*\.[ch]" --exclude="TAGS" "$@" * ; }
ftr()  { egrep -rIHn --include="*\.rb" --include="\*.feature" --exclude="TAGS" "$@" * ; }
ft()   { egrep -Rn "$@" * ; }

# See if there is a local bash_aliases and source it
__aliases_path="${SHELL_HOME}/alias"
__shell_alias_file="${__aliases_path}/aliases.$(shell_name)"
__local_alias_file="${__aliases_path}/aliases.local"
source_if_exists "${__shell_alias_file}" "${__local_alias_file}"
